#!/usr/bin/env node

const cmdline = require('commander');
const fs = require('fs-extra');
const path = require('path');
const prettier = require('../src');
const { version } = require('../package.json');
const defaults = require('../src/defaultOptions');

cmdline
    .version(version)
    .arguments('[PATH]')
    .option('--write', 'Edit the file in-place. (Beware!)')
    .option('--tab-width <int>', `Specify the number of spaces per indentation-level. Defaults to ${defaults.tabWidth}.`, defaults.tabWidth)
    .option('--use-tabs', 'Indent lines with tabs instead of spaces.')
    .option('--key-order <items>', 'Sort order for keys in package.json', (val) => val.split(','), defaults.keyOrder)
    .parse(process.argv);

const [packageJsonPath = path.join(process.cwd(), 'package.json')] = cmdline.args;

fs.pathExists(packageJsonPath).catch(() => {
  process.exitCode = 1;
  cmdline.help();
}).then(() => {
  return fs.readJson(packageJsonPath);
}).then((packageJson) => {
  return prettier.format(packageJson, cmdline);
}).then((prettyJson) => {
  if (cmdline.write) {
    return fs.writeFile(packageJsonPath, prettyJson);
  } else {
    return console.log(prettyJson);
  }
}).then(() => {
  process.exitCode = 0;
}).catch((err) => {
  console.error(err);
  process.exitCode = 1;
});
